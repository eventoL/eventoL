# Generated by Django 1.11.6 on 2018-06-30 21:58

from django.db import migrations
from django.db import models

from manager.utils.slug import get_unique_slug


def fill_event_tags(apps, schema_editor):
    """Replace the old 'slug' field with a EventTag"""
    Event = apps.get_model("manager", "Event")
    EventTag = apps.get_model("manager", "EventTag")
    qs = Event.objects.filter(tags=None)
    for event in qs:
        event_tag, created = EventTag.objects.get_or_create(
            name=event.slug, defaults={"message": event.abstract}
        )
        # run save to force slug creation.
        if not event_tag.slug:
            event_tag.slug = get_unique_slug(event_tag, "name", "slug")
            event_tag.save()
        event.tags.add(event_tag)
        event.save()


class Migration(migrations.Migration):
    dependencies = [
        ("manager", "0014_auto_20180430_1904"),
    ]

    operations = [
        migrations.CreateModel(
            name="EventTag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="This name will be used as a slug",
                        max_length=50,
                        unique=True,
                        verbose_name="EventTag Name",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Created At")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Updated At")),
                (
                    "background",
                    models.ImageField(
                        help_text="A image to show in the background of", upload_to=""
                    ),
                ),
                (
                    "logo_header",
                    models.ImageField(
                        blank=True,
                        help_text="This logo will be showed in the corner right of the page",
                        null=True,
                        upload_to="",
                    ),
                ),
                (
                    "logo_landing",
                    models.ImageField(
                        blank=True,
                        help_text="Logo to show in the center of the page",
                        null=True,
                        upload_to="",
                    ),
                ),
                (
                    "message",
                    models.TextField(
                        help_text="A message to show in the center of the page", max_length=280
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="For example: flisol-caba",
                        max_length=100,
                        unique=True,
                        verbose_name="URL",
                    ),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="activity",
            name="additional_info",
            field=models.TextField(
                blank=True,
                help_text="Any info you consider relevant                                                    for the organizer: i.e. Write here                                                    if your activity has any special requirement",
                null=True,
                verbose_name="Additional Info",
            ),
        ),
        migrations.AlterField(
            model_name="activity",
            name="is_dummy",
            field=models.BooleanField(
                default=False,
                help_text="A dummy activity is used for example for coffee                                                breaks. We use this to exclude it from the index                                                page and other places",
                verbose_name="Is a dummy Activity?",
            ),
        ),
        migrations.AlterField(
            model_name="activity",
            name="labels",
            field=models.CharField(
                help_text="Comma separated tags. i.e. Linux,                                           Free Software, Archlinux",
                max_length=200,
                verbose_name="Labels",
            ),
        ),
        migrations.AlterField(
            model_name="activity",
            name="presentation",
            field=models.FileField(
                blank=True,
                help_text="Any material you are going to use                                                 for the talk (optional, but recommended)",
                null=True,
                upload_to="talks",
                verbose_name="Presentation",
            ),
        ),
        migrations.AlterField(
            model_name="activity",
            name="speaker_contact",
            field=models.EmailField(
                help_text="Where can whe reach you                                                     from the organization team?",
                max_length=254,
                verbose_name="Speaker Contact",
            ),
        ),
        migrations.AlterField(
            model_name="attendee",
            name="additional_info",
            field=models.CharField(
                blank=True,
                help_text="Any additional info you consider                                                    relevant for the organizers",
                max_length=200,
                null=True,
                verbose_name="Additional Info",
            ),
        ),
        migrations.AlterField(
            model_name="collaborator",
            name="assignation",
            field=models.CharField(
                blank=True,
                help_text="Anything you can help with                                                (i.e. Talks, Coffee...)",
                max_length=200,
                null=True,
                verbose_name="Assignation",
            ),
        ),
        migrations.AlterField(
            model_name="collaborator",
            name="time_availability",
            field=models.CharField(
                blank=True,
                help_text='Time gap in which you can                                                      help during the event. i.e.                                                      "All the event", "Morning",                                                      "Afternoon", ...',
                max_length=200,
                null=True,
                verbose_name="Time Availability",
            ),
        ),
        migrations.AlterField(
            model_name="installation",
            name="notes",
            field=models.TextField(
                blank=True,
                help_text="Any information or trouble you found                                          and consider relevant to document",
                null=True,
                verbose_name="Notes",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="tags",
            field=models.ManyToManyField(
                help_text="Select tags to show this event in the EventTag landing",
                to="manager.EventTag",
            ),
        ),
        # migrate slug field.
        migrations.RunPython(fill_event_tags),
    ]
